// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QMessage;

namespace QMessage.Migrations
{
    [DbContext(typeof(qmessageContext))]
    [Migration("20240315034808_mig001")]
    partial class mig001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("QMessage.Models.QMQDb", b =>
                {
                    b.Property<string>("Telegramm")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<long>("FieldSeq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Feature")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ColumnName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Factor")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("TableName")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Type")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Telegramm", "FieldSeq", "Feature");

                    b.ToTable("QMQDb");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_BODY", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<long>("FIELD_SEQ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FEATURE")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALUE")
                        .HasColumnType("VARCHAR(1000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "FIELD_SEQ");

                    b.ToTable("QMQ_IN_BODY");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_BODY_H", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<long>("FIELD_SEQ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FEATURE")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALUE")
                        .HasColumnType("VARCHAR(1000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "FIELD_SEQ");

                    b.ToTable("QMQ_IN_BODY_H");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_ERRORLOG", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_ERROR")
                        .HasColumnType("TEXT");

                    b.Property<string>("ERROR_TEXT")
                        .HasColumnType("VARCHAR(4000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "DATE_TIME_ERROR");

                    b.ToTable("QMQ_IN_ERRORLOG");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_ERRORLOG_H", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_ERROR")
                        .HasColumnType("TEXT");

                    b.Property<string>("ERROR_TEXT")
                        .HasColumnType("VARCHAR(4000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "DATE_TIME_ERROR");

                    b.ToTable("QMQ_IN_ERRORLOG_H");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_HEADER", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_IN")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_PROC")
                        .HasColumnType("TEXT");

                    b.Property<string>("EXPIRATION_TIME")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_TYPE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MSG_STATUS")
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("REMARKS")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<long?>("RETRY_COUNT")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TARGET")
                        .HasColumnType("TEXT");

                    b.HasKey("SOURCE", "MESSAGE_ID");

                    b.ToTable("QMQ_IN_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_BODY", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<long>("FIELD_SEQ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FEATURE")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALUE")
                        .HasColumnType("VARCHAR(1000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "FIELD_SEQ");

                    b.ToTable("QMQ_OUT_BODY");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_BODY_H", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<long>("FIELD_SEQ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FEATURE")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALUE")
                        .HasColumnType("VARCHAR(1000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "FIELD_SEQ");

                    b.ToTable("QMQ_OUT_BODY_H");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_ERRORLOG", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_ERROR")
                        .HasColumnType("TEXT");

                    b.Property<string>("ERROR_TEXT")
                        .HasColumnType("VARCHAR(4000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "DATE_TIME_ERROR");

                    b.ToTable("QMQ_OUT_ERRORLOG");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_ERRORLOG_H", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_ERROR")
                        .HasColumnType("TEXT");

                    b.Property<string>("ERROR_TEXT")
                        .HasColumnType("VARCHAR(4000)");

                    b.HasKey("SOURCE", "MESSAGE_ID", "DATE_TIME_ERROR");

                    b.ToTable("QMQ_OUT_ERRORLOG_H");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_HEADER", b =>
                {
                    b.Property<string>("SOURCE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_IN")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATE_TIME_PROC")
                        .HasColumnType("TEXT");

                    b.Property<string>("EXPIRATION_TIME")
                        .HasColumnType("TEXT");

                    b.Property<string>("MESSAGE_TYPE")
                        .HasColumnType("TEXT");

                    b.Property<string>("MSG_STATUS")
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("REMARKS")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<long?>("RETRY_COUNT")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TARGET")
                        .HasColumnType("TEXT");

                    b.HasKey("SOURCE", "MESSAGE_ID");

                    b.ToTable("QMQ_OUT_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QmqInBody", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Feature")
                        .HasColumnType("TEXT");

                    b.Property<long>("FieldSeq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QmqInHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqInHeaderMessageId");

                    b.ToTable("QmqInBody");
                });

            modelBuilder.Entity("QMessage.Models.QmqInBodyH", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Feature")
                        .HasColumnType("TEXT");

                    b.Property<long>("FieldSeq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QmqInHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqInHeaderMessageId");

                    b.ToTable("QmqInBodyH");
                });

            modelBuilder.Entity("QMessage.Models.QmqInErrorlog", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("QmqInHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqInHeaderMessageId");

                    b.ToTable("QmqInErrorlog");
                });

            modelBuilder.Entity("QMessage.Models.QmqInErrorlogH", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("QmqInHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqInHeaderMessageId");

                    b.ToTable("QmqInErrorlogH");
                });

            modelBuilder.Entity("QMessage.Models.QmqInHeader", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeIn")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeProc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpirationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MsgStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<long?>("RetryCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Target")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.ToTable("QmqInHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutBody", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Feature")
                        .HasColumnType("TEXT");

                    b.Property<long>("FieldSeq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QmqOutHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqOutHeaderMessageId");

                    b.ToTable("QmqOutBody");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutBodyH", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Feature")
                        .HasColumnType("TEXT");

                    b.Property<long>("FieldSeq")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QmqOutHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqOutHeaderMessageId");

                    b.ToTable("QmqOutBodyH");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutErrorlog", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("QmqOutHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqOutHeaderMessageId");

                    b.ToTable("QmqOutErrorlog");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutErrorlogH", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorText")
                        .HasColumnType("TEXT");

                    b.Property<string>("QmqOutHeaderMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("QmqOutHeaderMessageId");

                    b.ToTable("QmqOutErrorlogH");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutHeader", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeIn")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTimeProc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpirationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MsgStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<long?>("RetryCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Target")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.ToTable("QmqOutHeader");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_BODY", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_IN_HEADER", "QMQ_IN_HEADER")
                        .WithMany("QMQ_IN_BODies")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_IN_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_BODY_H", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_IN_HEADER", "QMQ_IN_HEADER")
                        .WithMany("QMQ_IN_BODY_Hs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_IN_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_ERRORLOG", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_IN_HEADER", "QMQ_IN_HEADER")
                        .WithMany("QMQ_IN_ERRORLOGs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_IN_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_ERRORLOG_H", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_IN_HEADER", "QMQ_IN_HEADER")
                        .WithMany("QMQ_IN_ERRORLOG_Hs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_IN_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_BODY", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_OUT_HEADER", "QMQ_OUT_HEADER")
                        .WithMany("QMQ_OUT_BODies")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_OUT_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_BODY_H", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_OUT_HEADER", "QMQ_OUT_HEADER")
                        .WithMany("QMQ_OUT_BODY_Hs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_OUT_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_ERRORLOG", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_OUT_HEADER", "QMQ_OUT_HEADER")
                        .WithMany("QMQ_OUT_ERRORLOGs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_OUT_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_ERRORLOG_H", b =>
                {
                    b.HasOne("QMessage.Models.QMQ_OUT_HEADER", "QMQ_OUT_HEADER")
                        .WithMany("QMQ_OUT_ERRORLOG_Hs")
                        .HasForeignKey("SOURCE", "MESSAGE_ID")
                        .IsRequired();

                    b.Navigation("QMQ_OUT_HEADER");
                });

            modelBuilder.Entity("QMessage.Models.QmqInBody", b =>
                {
                    b.HasOne("QMessage.Models.QmqInHeader", "QmqInHeader")
                        .WithMany("QmqInBodies")
                        .HasForeignKey("QmqInHeaderMessageId");

                    b.Navigation("QmqInHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqInBodyH", b =>
                {
                    b.HasOne("QMessage.Models.QmqInHeader", "QmqInHeader")
                        .WithMany("QmqInBodyHs")
                        .HasForeignKey("QmqInHeaderMessageId");

                    b.Navigation("QmqInHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqInErrorlog", b =>
                {
                    b.HasOne("QMessage.Models.QmqInHeader", "QmqInHeader")
                        .WithMany("QmqInErrorlogs")
                        .HasForeignKey("QmqInHeaderMessageId");

                    b.Navigation("QmqInHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqInErrorlogH", b =>
                {
                    b.HasOne("QMessage.Models.QmqInHeader", "QmqInHeader")
                        .WithMany("QmqInErrorlogHs")
                        .HasForeignKey("QmqInHeaderMessageId");

                    b.Navigation("QmqInHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutBody", b =>
                {
                    b.HasOne("QMessage.Models.QmqOutHeader", "QmqOutHeader")
                        .WithMany("QmqOutBodies")
                        .HasForeignKey("QmqOutHeaderMessageId");

                    b.Navigation("QmqOutHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutBodyH", b =>
                {
                    b.HasOne("QMessage.Models.QmqOutHeader", "QmqOutHeader")
                        .WithMany("QmqOutBodyHs")
                        .HasForeignKey("QmqOutHeaderMessageId");

                    b.Navigation("QmqOutHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutErrorlog", b =>
                {
                    b.HasOne("QMessage.Models.QmqOutHeader", "QmqOutHeader")
                        .WithMany("QmqOutErrorlogs")
                        .HasForeignKey("QmqOutHeaderMessageId");

                    b.Navigation("QmqOutHeader");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutErrorlogH", b =>
                {
                    b.HasOne("QMessage.Models.QmqOutHeader", "QmqOutHeader")
                        .WithMany("QmqOutErrorlogHs")
                        .HasForeignKey("QmqOutHeaderMessageId");

                    b.Navigation("QmqOutHeader");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_IN_HEADER", b =>
                {
                    b.Navigation("QMQ_IN_BODies");

                    b.Navigation("QMQ_IN_BODY_Hs");

                    b.Navigation("QMQ_IN_ERRORLOG_Hs");

                    b.Navigation("QMQ_IN_ERRORLOGs");
                });

            modelBuilder.Entity("QMessage.Models.QMQ_OUT_HEADER", b =>
                {
                    b.Navigation("QMQ_OUT_BODies");

                    b.Navigation("QMQ_OUT_BODY_Hs");

                    b.Navigation("QMQ_OUT_ERRORLOG_Hs");

                    b.Navigation("QMQ_OUT_ERRORLOGs");
                });

            modelBuilder.Entity("QMessage.Models.QmqInHeader", b =>
                {
                    b.Navigation("QmqInBodies");

                    b.Navigation("QmqInBodyHs");

                    b.Navigation("QmqInErrorlogHs");

                    b.Navigation("QmqInErrorlogs");
                });

            modelBuilder.Entity("QMessage.Models.QmqOutHeader", b =>
                {
                    b.Navigation("QmqOutBodies");

                    b.Navigation("QmqOutBodyHs");

                    b.Navigation("QmqOutErrorlogHs");

                    b.Navigation("QmqOutErrorlogs");
                });
#pragma warning restore 612, 618
        }
    }
}
