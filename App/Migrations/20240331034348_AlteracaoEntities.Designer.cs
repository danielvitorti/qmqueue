// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QMessage;

namespace QMessage.Migrations
{
    [DbContext(typeof(qmessageContext))]
    [Migration("20240331034348_AlteracaoEntities")]
    partial class AlteracaoEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("QMessage.Models.MENSAGEM_ENTRADA_CABECALHO", b =>
                {
                    b.Property<string>("SISTEMA_ORIGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("ID_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("CODIGO_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATA_PROCESSAMENTO")
                        .HasColumnType("TEXT");

                    b.Property<string>("OBSERVACAO")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("SISTEMA_DESTINO")
                        .HasColumnType("TEXT");

                    b.Property<string>("STATUS")
                        .HasColumnType("CHAR(1)");

                    b.Property<int>("iColumns")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortCol_0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortingCols")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("sEcho")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSortDir_0")
                        .HasColumnType("TEXT");

                    b.HasKey("SISTEMA_ORIGEM", "ID_MENSAGEM");

                    b.ToTable("MENSAGEM_ENTRADA_CABECALHO");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_ENTRADA_CORPO", b =>
                {
                    b.Property<string>("SISTEMA_ORIGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("ID_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<long>("SEQUENCIAL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAMPO")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALOR")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int>("iColumns")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortCol_0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortingCols")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("sEcho")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSortDir_0")
                        .HasColumnType("TEXT");

                    b.HasKey("SISTEMA_ORIGEM", "ID_MENSAGEM", "SEQUENCIAL");

                    b.ToTable("MENSAGEM_ENTRADA_CORPO");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_SAIDA_CABECALHO", b =>
                {
                    b.Property<string>("SISTEMA_DESTINO")
                        .HasColumnType("TEXT");

                    b.Property<string>("ID_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("CODIGO_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("DATA_PROCESSAMENTO")
                        .HasColumnType("TEXT");

                    b.Property<string>("OBSERVACAO")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("SISTEMA_ORIGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("STATUS")
                        .HasColumnType("CHAR(1)");

                    b.Property<int>("iColumns")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortCol_0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortingCols")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("sEcho")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSortDir_0")
                        .HasColumnType("TEXT");

                    b.HasKey("SISTEMA_DESTINO", "ID_MENSAGEM");

                    b.ToTable("MENSAGEM_SAIDA_CABECALHO");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_SAIDA_CORPO", b =>
                {
                    b.Property<string>("SISTEMA_ORIGEM")
                        .HasColumnType("TEXT");

                    b.Property<string>("ID_MENSAGEM")
                        .HasColumnType("TEXT");

                    b.Property<long>("SEQUENCIAL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAMPO")
                        .HasColumnType("CHAR(40)");

                    b.Property<string>("VALOR")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int>("iColumns")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iDisplayStart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortCol_0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iSortingCols")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("sEcho")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSearch")
                        .HasColumnType("TEXT");

                    b.Property<string>("sSortDir_0")
                        .HasColumnType("TEXT");

                    b.HasKey("SISTEMA_ORIGEM", "ID_MENSAGEM", "SEQUENCIAL");

                    b.ToTable("MENSAGEM_SAIDA_CORPO");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_ENTRADA_CORPO", b =>
                {
                    b.HasOne("QMessage.Models.MENSAGEM_ENTRADA_CABECALHO", "mensagemEntradaCabecalho")
                        .WithMany("mensagemEntradaCorpo")
                        .HasForeignKey("SISTEMA_ORIGEM", "ID_MENSAGEM")
                        .IsRequired();

                    b.Navigation("mensagemEntradaCabecalho");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_SAIDA_CORPO", b =>
                {
                    b.HasOne("QMessage.Models.MENSAGEM_SAIDA_CABECALHO", "mensagemSaidaCabecalho")
                        .WithMany("mensagemSaidaCorpo")
                        .HasForeignKey("SISTEMA_ORIGEM", "ID_MENSAGEM")
                        .IsRequired();

                    b.Navigation("mensagemSaidaCabecalho");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_ENTRADA_CABECALHO", b =>
                {
                    b.Navigation("mensagemEntradaCorpo");
                });

            modelBuilder.Entity("QMessage.Models.MENSAGEM_SAIDA_CABECALHO", b =>
                {
                    b.Navigation("mensagemSaidaCorpo");
                });
#pragma warning restore 612, 618
        }
    }
}
